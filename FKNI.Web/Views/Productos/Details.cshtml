@model FKNI.Application.DTOs.ProductosDTO

@{
    ViewData["Title"] = "Detalles del Producto";
}

<div class="container my-5">
    <h2 class="text-primary mb-4">Detalles del Producto</h2>

    <!-- Información principal del producto -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h4 class="card-title">@Model.NombreProducto</h4>
            <p class="text-muted">@Model.Descripcion</p>

            <dl class="row mt-3">
                <dt class="col-sm-4">ID del Producto</dt>
                <dd class="col-sm-8">@Model.IdProducto</dd>

                <dt class="col-sm-4">Precio</dt>
                <dd class="col-sm-8">$@Model.Precio</dd>

                <dt class="col-sm-4">Stock</dt>
                <dd class="col-sm-8">@Model.Stock unidades</dd>

                <dt class="col-sm-4">Valoración Promedio</dt>
                <dd class="col-sm-8">
                    <!-- Reseñas para valoracion -->
                    @if (Model.Resenas != null && Model.Resenas.Any())
                    {
                        int totalValoraciones = (int)Model.Resenas.Sum(r => r.Valoracion);
                        int cantidad = Model.Resenas.Count();
                        decimal promedio = (decimal)totalValoraciones / cantidad;

                        int estrellas = (int)Math.Floor(promedio);
                        bool media = (promedio - estrellas) >= 0.5m;
                        int vacias = 5 - estrellas - (media ? 1 : 0);

                        <div class="mb-4">
                            <p>
                                @for (int i = 0; i < estrellas; i++)
                                {
                                    <i class="fas fa-star text-warning"></i>
                                }
                                @if (media)
                                {
                                    <i class="fas fa-star-half-alt text-warning"></i>
                                }
                                @for (int i = 0; i < vacias; i++)
                                {
                                    <i class="far fa-star text-warning"></i>
                                }

                                <span class="ms-2">(@promedio.ToString("0.0"))</span>
                            </p>
                        </div>
                    }
                </dd>

                <dt class="col-sm-4">Categoría</dt>
                <dd class="col-sm-8">@Model.IdCategoriaNavigation?.NombreCategoria</dd>

                <dt class="col-sm-4">Estado</dt>
                <dd class="col-sm-8">@Model.Estado</dd>
            </dl>
        </div>
    </div>

    <!-- Imágenes del producto -->
    @if (Model.IdImagen != null && Model.IdImagen.Any())
    {
        <div class="mb-4">
            <h5>Imágenes</h5>
            <div class="d-flex flex-wrap gap-3">
                @foreach (var img in Model.IdImagen)
                {
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(img.UrlImagen)"
                         alt="Imagen del producto"
                         class="img-thumbnail"
                         style="max-width: 300px;" />
                }
            </div>
        </div>
    }

    <!-- Etiquetas -->
    @if (Model.IdEtiqueta != null && Model.IdEtiqueta.Any())
    {
        <div class="mb-4">
            <h5>Etiquetas</h5>
            <ul class="list-inline">
                @foreach (var tag in Model.IdEtiqueta)
                {
                    <li class="list-inline-item badge bg-secondary">@tag.NombreEtiqueta</li>
                }
            </ul>
        </div>
    }

    <!-- Reseñas -->
    @if (Model.Resenas != null && Model.Resenas.Any())
    {
        <div class="mb-4">
            <h5>Reseñas</h5>
            @foreach (var review in Model.Resenas)
            {
                <div class="border rounded p-3 mb-3 bg-light">
                    <p><strong>Usuario:</strong> @review.IdUsuarioNavigation?.NombreUsuario</p>
                    <p><strong>Comentario:</strong> @review.Comentario</p>
                    <p><strong>Fecha:</strong> @review.Fecha</p>
                    <p>
                        <strong>Valoración:</strong>
                        @{
                            var valor = review.Valoracion;
                            var estrellas = (int)Math.Floor((double)valor);
                            var media = ((double)valor - estrellas) >= 0.5;
                            var vacías = 5 - estrellas - (media ? 1 : 0);
                        }

                        @for (int i = 0; i < estrellas; i++)
                        {
                            <i class="fas fa-star text-warning"></i>
                        }
                        @if (media)
                        {
                            <i class="fas fa-star-half-alt text-warning"></i>
                        }
                        @for (int i = 0; i < vacías; i++)
                        {
                            <i class="far fa-star text-warning"></i>
                        }

                        <span class="ms-2">(@valor)</span>
                    </p>
                </div>
            }
        </div>
    }
    <a asp-controller="Resenas" asp-action="Create" asp-route-idProducto="@Model.IdProducto" asp-route-idUsuario="6"
       class="btn btn-success">
        <i class="fas fa-plus-circle"></i> Agregar nueva reseña
    </a>

    <!-- Botón volver -->
    <div class="mt-4">
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Volver al listado
        </a>
    </div>
</div>
