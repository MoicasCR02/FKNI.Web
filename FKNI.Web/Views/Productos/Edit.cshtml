@model FKNI.Application.DTOs.ProductosDTO

@{
    ViewData["Title"] = "Editar Producto";
}

<div class="container mt-4 mb-5 pb-5">
    <h2 class="mb-4">Editar Producto</h2>

    <div class="card shadow-sm">
        <div class="card-body">
            <form asp-action="Edit" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="mb-3">
                    <label asp-for="NombreProducto" class="form-label"></label>
                    <input asp-for="NombreProducto" class="form-control" />
                    <span asp-validation-for="NombreProducto" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Descripcion" class="form-label"></label>
                    <input asp-for="Descripcion" class="form-control" />
                    <span asp-validation-for="Descripcion" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Precio" class="form-label"></label>
                    <input asp-for="Precio" class="form-control" />
                    <span asp-validation-for="Precio" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Stock" class="form-label"></label>
                    <input asp-for="Stock" class="form-control" />
                    <span asp-validation-for="Stock" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="IdCategoria" class="form-label"></label>
                    @Html.DropDownListFor(m => m.IdCategoria,
                             new SelectList(ViewBag.ListCategoria, "IdCategoria", "NombreCategoria"),
                             new { @class = "form-select" })
                    <span asp-validation-for="IdCategoria" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="IdEtiqueta" class="form-label"></label>
                    <select id="selectedEtiquetas" name="selectedEtiquetas"
                            class="form-select" asp-items="ViewBag.ListEtiquetas"
                            multiple="multiple"></select>
                </div>

                <!-- IMÁGENES ACTUALES -->
                <div class="mb-3">
                    <label class="form-label">Imágenes</label>
                    <div id="imagen-lista" class="d-flex flex-wrap gap-3">
                        @if (ViewBag.ListImagenes != null)
                        {
                            foreach (var img in ViewBag.ListImagenes)
                            {
                                <p>id: @img.IdImagen</p>
                                var base64 = Convert.ToBase64String(img.UrlImagen);
                                var imageSrc = $"data:image/jpeg;base64,{base64}";
                                <div class="text-center imagen-item" id="imagen-@img.IdImagen">
                                    <img src="@imageSrc" class="img-thumbnail mb-2" style="max-width: 100px;" />
                                    <input type="hidden" name="ExistingImageIds" value="@img.IdImagen" />
                                    <button type="button" class="btn btn-sm btn-danger" onclick="eliminarImagenExistente(@img.IdImagen)">Eliminar</button>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No hay imágenes disponibles.</p>
                        }
                    </div>

                    <button type="button" class="btn btn-outline-primary mt-2" onclick="agregarNuevaImagen()">Agregar imagen</button>
                </div>

                <div id="previewList" class="mt-3"></div>

                <div class="d-grid mt-4">
                    <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
                </div>
            </form>

            <div class="mt-3">
                <a asp-action="IndexAdmin" class="btn btn-link">← Volver a la lista</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Elimina una imagen precargada
        function eliminarImagenExistente(id) {
            const div = document.getElementById('imagen-' + id);
            if (div) div.remove();

            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'imagenesEliminadas[]';
            input.value = id;
            document.querySelector('form').appendChild(input);
        }

        // Agrega una nueva imagen seleccionada por el usuario
        function agregarNuevaImagen() {
            const input = document.createElement('input');
            input.type = 'file';
            input.accept = 'image/*';
            input.name = 'ImageFiles'; // ← importante
            input.style.display = 'none';

            input.addEventListener('change', function () {
                if (input.files.length === 0) return;

                const file = input.files[0];
                const reader = new FileReader();

                reader.onload = function (e) {
                    const contenedor = document.getElementById('imagen-lista');

                    const div = document.createElement('div');
                    div.className = 'text-center imagen-item';

                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.className = 'img-thumbnail mb-2';
                    img.style.maxWidth = '100px';

                    const eliminarBtn = document.createElement('button');
                    eliminarBtn.type = 'button';
                    eliminarBtn.className = 'btn btn-sm btn-danger';
                    eliminarBtn.textContent = 'Eliminar';
                    eliminarBtn.onclick = function () {
                        div.remove();
                    };

                    // Importante: el input que seleccionó el usuario se añade directamente al DOM
                    div.appendChild(img);
                    div.appendChild(input);
                    div.appendChild(eliminarBtn);
                    contenedor.appendChild(div);
                };

                reader.readAsDataURL(file);
            });

            document.body.appendChild(input);
            input.click();
        }
    </script>
}
