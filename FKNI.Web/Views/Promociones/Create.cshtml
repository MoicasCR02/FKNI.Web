@using System.Text.Json
@using FKNI.Application.DTOs
@model FKNI.Application.DTOs.PromocionesDTO

@{
    ViewData["Title"] = "Create";
}

<style>
    ul.ui-autocomplete {
        z-index: 1100;
    }
</style>

<h1>Create</h1>

<h4>PromocionesDTO</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="myForm"
              data-ajax="true"
              data-ajax-method="POST"
              data-ajax-begin="onBegin"
              data-ajax-failure="onFailure"
              data-ajax-success="onSuccess"
              data-ajax-complete="onComplete">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="TipoPromocion" class="form-label">Tipo Promoción</label>
                @Html.DropDownListFor(m => m.TipoPromocion,
                new List<SelectListItem>
                                {
                                new SelectListItem { Text = "Seleccione un tipo de promoción", Value = "" },
                                new SelectListItem { Text = "Producto", Value = "producto" },
                                new SelectListItem { Text = "Categoría", Value = "categoria" }
                                },
                                new { @class = "form-select", required = "required" }
                                )
                <span class="text-danger" id="errorCategoria"></span>
                <span asp-validation-for="TipoPromocion" class="text-danger"></span>
            </div>

            <div class="form-group" id="selectorProducto" style="display:none;">
                <label asp-for="BuscarProducto" class="control-label" ></label>
                <input asp-for="BuscarProducto" class="form-control form-control-sm" />
                <span asp-validation-for="BuscarProducto" class="text-danger"></span>
                @* <span id="NombreProducto" class="control-label fw-bold">-</span> *@
                <label id="NombreProducto" class="control-label fw-bold">-</label>
                <img id="imgProducto"
                     class="imagen-uniforme"
                     alt="Imagen del producto" />
            </div>

            <div class="mb-3" id="selectorCategoria" style="display:none;">
                <label asp-for="IdCategoria" class="form-label">Categoría</label>
                @Html.DropDownListFor(m => m.IdCategoria,
                                new SelectList(ViewBag.ListCategoria, "IdCategoria", "NombreCategoria"),
                                "Seleccione una categoría",
                                new { @class = "form-select", required = "required" })
                <span class="text-danger" id="errorCategoria"></span>
                <span asp-validation-for="IdCategoria" class="text-danger"></span>

            </div>

            <div class="form-group">
                <label asp-for="Descuento" class="control-label"></label>
                <input asp-for="Descuento" class="form-control" />
                <span asp-validation-for="Descuento" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaInicio" class="control-label"></label>
               <input asp-for="FechaInicio" class="form-control" type="date" value="@ViewBag.FechaInicio" />
                <span asp-validation-for="FechaInicio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaFin" class="control-label"></label>
                <input asp-for="FechaFin" class="form-control" type="date" value="@ViewBag.FechaFin" />
                <span asp-validation-for="FechaFin" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>

         // Control de selector
            document.getElementById("TipoPromocion").addEventListener("change", function () {
            const value = this.value;

            if (value === "producto") {
                document.getElementById("selectorProducto").style.display = "block";
                document.getElementById("selectorCategoria").style.display = "none";
            }
            else if (value === "categoria") {
                document.getElementById("selectorProducto").style.display = "none";
                document.getElementById("selectorCategoria").style.display = "block";
            }
            else {
                // Si no se ha elegido nada, oculta ambos
                document.getElementById("selectorProducto").style.display = "none";
                document.getElementById("selectorCategoria").style.display = "none";
            }
        });

        /**************************/
        // Busca el cliente por nombre+apellido1+apellido2 //
        /**************************/

        $("#BuscarProducto").autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetProductoByName", "Productos")',
                    dataType: "json",
                    data: { filtro: request.term },
                    success: function (data) {

                        response($.map(data, function (item) {
                            const imagenes = item.IdImagen; // Convierte el JSON a un objeto JavaScript
                            // Acceder al primer objeto del array
                            const primerObjeto = imagenes[0];
                            
                            // Acceder a la edad del segundo objeto
                            console.log("Item recibido:", item);
                            if (Array.isArray(imagenes) && imagenes.length > 0 && imagenes[0].UrlImagen) {
                                mostrar = primerObjeto.UrlImagen;
                            } else {
                                mostrar = null; // o mensaje de error
                            }
                            return {
                                label: item.NombreProducto + "completado", // texto que se muestra en la lista
                                value: item.IdProducto,     // valor que se asigna al input
                                nombre: item.NombreProducto, // propiedad extra para mostrar el nombre en el label
                                imagen: mostrar
                            };
                        }));
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                       console.log(mostrar);
                    }
                });
            },
            select: function (event, ui) {
                // Asignar el IdProducto (valor) al input
                $("#BuscarProducto").val(ui.item.value);
                // Mostrar el nombre del producto en la etiqueta
                $("#NombreProducto").text(ui.item.label);
                console.log(ui.item);
                if (ui.item.imagen) {
                $("#imgProducto").attr("src", "data:image/png;base64," + ui.item.imagen);
                } else {
                    alert("La imagen no existe, no se puede seleccionar");
                    $("#imgProducto").attr("src", ""); // limpiar
                }
                    }
        });


        /**************************/
        // Limpiar cajas de texto cuando tenga el foco
        /**************************/
        $("#BuscarProducto").focus(function () {
            // Limpia la caja de texto
            $("#BuscarProducto").val("");
            $("#NombreProducto").html("*")
        });

        //Controles de AJAX
        function onBegin() {
            console.log("onBegin")
        }

        function onFailure(response) {
            console.log("onFailure")
            Swal.fire({
                title: "Error!",
                text: response.responseText,
                icon: "error"
            });
        }

        function onSuccess(response) {
            console.log("onSuccess")
            document.getElementById("myForm").reset();
            document.getElementById("NombreProducto").innerHTML = ""
            

            Swal.fire({
                icon: "success",
                title: "Orden salvada ...",
                showConfirmButton: false,
                timer: 1500
            });
            location.reload();

        }

        function onComplete() {
            console.log("Fin del proceso")
        }
        function onClearForm() {
            document.getElementById("myForm").reset();
            document.getElementById("NombreProducto").innerHTML = ""
            

        }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
